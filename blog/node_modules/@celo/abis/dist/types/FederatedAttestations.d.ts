export declare const federatedAttestationsABI: readonly [{
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "constructor";
    readonly inputs: readonly [{
        readonly name: "test";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "identifier";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
        readonly indexed: true;
    }, {
        readonly name: "issuer";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "signer";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: false;
    }, {
        readonly name: "issuedOn";
        readonly internalType: "uint64";
        readonly type: "uint64";
        readonly indexed: false;
    }, {
        readonly name: "publishedOn";
        readonly internalType: "uint64";
        readonly type: "uint64";
        readonly indexed: false;
    }];
    readonly name: "AttestationRegistered";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "identifier";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
        readonly indexed: true;
    }, {
        readonly name: "issuer";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "signer";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: false;
    }, {
        readonly name: "issuedOn";
        readonly internalType: "uint64";
        readonly type: "uint64";
        readonly indexed: false;
    }, {
        readonly name: "publishedOn";
        readonly internalType: "uint64";
        readonly type: "uint64";
        readonly indexed: false;
    }];
    readonly name: "AttestationRevoked";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "eip712DomainSeparator";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
        readonly indexed: false;
    }];
    readonly name: "EIP712DomainSeparatorSet";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "previousOwner";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "newOwner";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }];
    readonly name: "OwnershipTransferred";
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "EIP712_OWNERSHIP_ATTESTATION_TYPEHASH";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "MAX_ATTESTATIONS_PER_IDENTIFIER";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "MAX_IDENTIFIERS_PER_ADDRESS";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "addressToIdentifiers";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "eip712DomainSeparator";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }, {
        readonly name: "";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "identifierToAttestations";
    readonly outputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "signer";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "issuedOn";
        readonly internalType: "uint64";
        readonly type: "uint64";
    }, {
        readonly name: "publishedOn";
        readonly internalType: "uint64";
        readonly type: "uint64";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "initialized";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "isOwner";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "owner";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "address";
        readonly type: "address";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "registryContract";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "contract IRegistry";
        readonly type: "address";
    }];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "renounceOwnership";
    readonly outputs: readonly [];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }];
    readonly name: "revokedAttestations";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "newOwner";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "transferOwnership";
    readonly outputs: readonly [];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "pure";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "getVersionNumber";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "initialize";
    readonly outputs: readonly [];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "identifier";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }, {
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "issuedOn";
        readonly internalType: "uint64";
        readonly type: "uint64";
    }];
    readonly name: "registerAttestationAsIssuer";
    readonly outputs: readonly [];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "identifier";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }, {
        readonly name: "issuer";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "signer";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "issuedOn";
        readonly internalType: "uint64";
        readonly type: "uint64";
    }, {
        readonly name: "v";
        readonly internalType: "uint8";
        readonly type: "uint8";
    }, {
        readonly name: "r";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }, {
        readonly name: "s";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }];
    readonly name: "registerAttestation";
    readonly outputs: readonly [];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "identifier";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }, {
        readonly name: "issuer";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "revokeAttestation";
    readonly outputs: readonly [];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "issuer";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "identifiers";
        readonly internalType: "bytes32[]";
        readonly type: "bytes32[]";
    }, {
        readonly name: "accounts";
        readonly internalType: "address[]";
        readonly type: "address[]";
    }];
    readonly name: "batchRevokeAttestations";
    readonly outputs: readonly [];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "identifier";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }, {
        readonly name: "trustedIssuers";
        readonly internalType: "address[]";
        readonly type: "address[]";
    }];
    readonly name: "lookupAttestations";
    readonly outputs: readonly [{
        readonly name: "countsPerIssuer";
        readonly internalType: "uint256[]";
        readonly type: "uint256[]";
    }, {
        readonly name: "accounts";
        readonly internalType: "address[]";
        readonly type: "address[]";
    }, {
        readonly name: "signers";
        readonly internalType: "address[]";
        readonly type: "address[]";
    }, {
        readonly name: "issuedOns";
        readonly internalType: "uint64[]";
        readonly type: "uint64[]";
    }, {
        readonly name: "publishedOns";
        readonly internalType: "uint64[]";
        readonly type: "uint64[]";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "trustedIssuers";
        readonly internalType: "address[]";
        readonly type: "address[]";
    }];
    readonly name: "lookupIdentifiers";
    readonly outputs: readonly [{
        readonly name: "countsPerIssuer";
        readonly internalType: "uint256[]";
        readonly type: "uint256[]";
    }, {
        readonly name: "identifiers";
        readonly internalType: "bytes32[]";
        readonly type: "bytes32[]";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "identifier";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }, {
        readonly name: "issuer";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "signer";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "issuedOn";
        readonly internalType: "uint64";
        readonly type: "uint64";
    }, {
        readonly name: "v";
        readonly internalType: "uint8";
        readonly type: "uint8";
    }, {
        readonly name: "r";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }, {
        readonly name: "s";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }];
    readonly name: "validateAttestationSig";
    readonly outputs: readonly [];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "pure";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "identifier";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }, {
        readonly name: "issuer";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "signer";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "issuedOn";
        readonly internalType: "uint64";
        readonly type: "uint64";
    }];
    readonly name: "getUniqueAttestationHash";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }];
}];
