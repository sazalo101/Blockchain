import { CeloDistributionSchedule } from '@celo/abis-12/web3/CeloDistributionSchedule';
import { BaseWrapper } from './BaseWrapper';
type TargetTotalSupplyResponse = {
    targetCeloDistribution: string;
    communityTargetRewards: string;
    carbonFundTargetRewards: string;
};
type CeloDistributionScheduleConfig = {
    carbonOffsetting: {
        fraction: string;
        partner: string;
    };
    communityReward: {
        fraction: string;
        fund: string;
    };
    distributableAmount: string;
    targetCeloDistribution: {
        carbonFundTargetRewards: string;
        communityTargetRewards: string;
        targetCeloDistribution: string;
    };
};
export declare class CeloDistributionScheduleWrapper extends BaseWrapper<CeloDistributionSchedule> {
    carbonOffsettingPartner: () => Promise<string>;
    communityRewardFund: () => Promise<string>;
    getCommunityRewardFraction: () => Promise<string>;
    getCarbonOffsettingFraction: () => Promise<string>;
    getRemainingBalanceToDistribute: () => Promise<string>;
    getTotalDistributedBySchedule: () => Promise<string>;
    getDistributableAmount: () => Promise<string>;
    getTargetCeloDistribution: () => Promise<TargetTotalSupplyResponse>;
    distributeAccordingToSchedule: () => import("@celo/connect").CeloTransactionObject<boolean>;
    getConfig(): Promise<CeloDistributionScheduleConfig>;
}
export {};
