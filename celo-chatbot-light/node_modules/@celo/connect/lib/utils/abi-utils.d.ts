import { AbiCoder, ABIDefinition, AbiItem, DecodedParamsObject } from '../abi-types';
/** @internal */
export declare const getAbiByName: (abi: AbiItem[], methodName: string) => AbiItem;
/** @internal */
export declare const parseDecodedParams: (params: DecodedParamsObject) => {
    args: any[];
    params: DecodedParamsObject;
};
/**
 * Parses solidity function signature
 * @dev
 * example of input function signature: transfer(address,uint256)
 * example of output structure can be found in propose.test.ts variable `structAbiDefinition`
 * supports tuples eg. mint(uint256, (uint256, uint256))
 * and structs eg. mint(uint256, (uint256 a, uint256 b))
 * @param fnSignature The function signature
 * @returns AbiItem structure that can be used to encode/decode
 */
export declare const signatureToAbiDefinition: (fnSignature: string) => ABIDefinition;
/** @internal */
export declare const decodeStringParameter: (ethAbi: AbiCoder, str: string) => any;
