export declare const validatorsABI: readonly [{
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "constructor";
    readonly inputs: readonly [{
        readonly name: "test";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "delay";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "CommissionUpdateDelaySet";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "value";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }, {
        readonly name: "duration";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "GroupLockedGoldRequirementsSet";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "size";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "MaxGroupSizeSet";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "length";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "MembershipHistoryLengthSet";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "previousOwner";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "newOwner";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }];
    readonly name: "OwnershipTransferred";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "registryAddress";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }];
    readonly name: "RegistrySet";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "validator";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "group";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }];
    readonly name: "ValidatorAffiliated";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "validator";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "blsPublicKey";
        readonly internalType: "bytes";
        readonly type: "bytes";
        readonly indexed: false;
    }];
    readonly name: "ValidatorBlsPublicKeyUpdated";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "validator";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "group";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }];
    readonly name: "ValidatorDeaffiliated";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "validator";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }];
    readonly name: "ValidatorDeregistered";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "validator";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "ecdsaPublicKey";
        readonly internalType: "bytes";
        readonly type: "bytes";
        readonly indexed: false;
    }];
    readonly name: "ValidatorEcdsaPublicKeyUpdated";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "validator";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "validatorPayment";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }, {
        readonly name: "group";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "groupPayment";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "ValidatorEpochPaymentDistributed";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "group";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "commission";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }, {
        readonly name: "activationBlock";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "ValidatorGroupCommissionUpdateQueued";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "group";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "commission";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "ValidatorGroupCommissionUpdated";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "group";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }];
    readonly name: "ValidatorGroupDeregistered";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "group";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "validator";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }];
    readonly name: "ValidatorGroupMemberAdded";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "group";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "validator";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }];
    readonly name: "ValidatorGroupMemberRemoved";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "group";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "validator";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }];
    readonly name: "ValidatorGroupMemberReordered";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "group";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "commission";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "ValidatorGroupRegistered";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "value";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }, {
        readonly name: "duration";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "ValidatorLockedGoldRequirementsSet";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "validator";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }];
    readonly name: "ValidatorRegistered";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "exponent";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }, {
        readonly name: "adjustmentSpeed";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "ValidatorScoreParametersSet";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "validator";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "score";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }, {
        readonly name: "epochScore";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "ValidatorScoreUpdated";
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "sender";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "blsKey";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }, {
        readonly name: "blsPop";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "checkProofOfPossession";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "commissionUpdateDelay";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "downtimeGracePeriod";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "aNumerator";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "aDenominator";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "bNumerator";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "bDenominator";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "exponent";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "_decimals";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "fractionMulExp";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "header";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "getBlockNumberFromHeader";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "getEpochNumber";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "blockNumber";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "getEpochNumberOfBlock";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "getEpochSize";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "blockNumber";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "getParentSealBitmap";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "header";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "getVerifiedSealBitmapFromHeader";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "groupLockedGoldRequirements";
    readonly outputs: readonly [{
        readonly name: "value";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "duration";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "header";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "hashHeader";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "initialized";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "isOwner";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "maxGroupSize";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "membershipHistoryLength";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "blockNumber";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "minQuorumSize";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "minQuorumSizeInCurrentSet";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "numberValidatorsInCurrentSet";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "blockNumber";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "numberValidatorsInSet";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "owner";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "address";
        readonly type: "address";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "registry";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "contract IRegistry";
        readonly type: "address";
    }];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "renounceOwnership";
    readonly outputs: readonly [];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "registryAddress";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "setRegistry";
    readonly outputs: readonly [];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "slashingMultiplierResetPeriod";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "newOwner";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "transferOwnership";
    readonly outputs: readonly [];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "validatorLockedGoldRequirements";
    readonly outputs: readonly [{
        readonly name: "value";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "duration";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "index";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "validatorSignerAddressFromCurrentSet";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "address";
        readonly type: "address";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "index";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "blockNumber";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "validatorSignerAddressFromSet";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "address";
        readonly type: "address";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "pure";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "getVersionNumber";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "registryAddress";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "groupRequirementValue";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "groupRequirementDuration";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "validatorRequirementValue";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "validatorRequirementDuration";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "validatorScoreExponent";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "validatorScoreAdjustmentSpeed";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "_membershipHistoryLength";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "_slashingMultiplierResetPeriod";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "_maxGroupSize";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "_commissionUpdateDelay";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "_downtimeGracePeriod";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "initialize";
    readonly outputs: readonly [];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "delay";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "setCommissionUpdateDelay";
    readonly outputs: readonly [];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "size";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "setMaxGroupSize";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "length";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "setMembershipHistoryLength";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "exponent";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "adjustmentSpeed";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "setValidatorScoreParameters";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "getMaxGroupSize";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "getCommissionUpdateDelay";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "value";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "duration";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "setGroupLockedGoldRequirements";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "value";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "duration";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "setValidatorLockedGoldRequirements";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "ecdsaPublicKey";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }, {
        readonly name: "blsPublicKey";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }, {
        readonly name: "blsPop";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "registerValidator";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "getValidatorScoreParameters";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "getMembershipHistory";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256[]";
        readonly type: "uint256[]";
    }, {
        readonly name: "";
        readonly internalType: "address[]";
        readonly type: "address[]";
    }, {
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "uptime";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "calculateEpochScore";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "uptimes";
        readonly internalType: "uint256[]";
        readonly type: "uint256[]";
    }];
    readonly name: "calculateGroupEpochScore";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "signer";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "uptime";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "updateValidatorScoreFromSigner";
    readonly outputs: readonly [];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "signer";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "maxPayment";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "distributeEpochPaymentsFromSigner";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "index";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "deregisterValidator";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "group";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "affiliate";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "deaffiliate";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "blsPublicKey";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }, {
        readonly name: "blsPop";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "updateBlsPublicKey";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "signer";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "ecdsaPublicKey";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "updateEcdsaPublicKey";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "signer";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "ecdsaPublicKey";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }, {
        readonly name: "blsPublicKey";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }, {
        readonly name: "blsPop";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "updatePublicKeys";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "commission";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "registerValidatorGroup";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "index";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "deregisterValidatorGroup";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "validator";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "addMember";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "validator";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "lesser";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "greater";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "addFirstMember";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "validator";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "removeMember";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "validator";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "lesserMember";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "greaterMember";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "reorderMember";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "commission";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "setNextCommissionUpdate";
    readonly outputs: readonly [];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "updateCommission";
    readonly outputs: readonly [];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "getAccountLockedGoldRequirement";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "meetsAccountLockedGoldRequirements";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "signer";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "getValidatorBlsPublicKeyFromSigner";
    readonly outputs: readonly [{
        readonly name: "blsPublicKey";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "getValidator";
    readonly outputs: readonly [{
        readonly name: "ecdsaPublicKey";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }, {
        readonly name: "blsPublicKey";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }, {
        readonly name: "affiliation";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "score";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "signer";
        readonly internalType: "address";
        readonly type: "address";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "getValidatorGroup";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "address[]";
        readonly type: "address[]";
    }, {
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "";
        readonly internalType: "uint256[]";
        readonly type: "uint256[]";
    }, {
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "getGroupNumMembers";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "n";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "getTopGroupValidators";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "address[]";
        readonly type: "address[]";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "accounts";
        readonly internalType: "address[]";
        readonly type: "address[]";
    }];
    readonly name: "getGroupsNumMembers";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256[]";
        readonly type: "uint256[]";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "getNumRegisteredValidators";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "getValidatorLockedGoldRequirements";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "getGroupLockedGoldRequirements";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "getRegisteredValidators";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "address[]";
        readonly type: "address[]";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "getRegisteredValidatorSigners";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "address[]";
        readonly type: "address[]";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "getRegisteredValidatorGroups";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "address[]";
        readonly type: "address[]";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "isValidatorGroup";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "isValidator";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "signer";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "getMembershipInLastEpochFromSigner";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "address";
        readonly type: "address";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "getMembershipInLastEpoch";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "address";
        readonly type: "address";
    }];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "validatorAccount";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "forceDeaffiliateIfValidator";
    readonly outputs: readonly [];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "value";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "setSlashingMultiplierResetPeriod";
    readonly outputs: readonly [];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "value";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "setDowntimeGracePeriod";
    readonly outputs: readonly [];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "resetSlashingMultiplier";
    readonly outputs: readonly [];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "halveSlashingMultiplier";
    readonly outputs: readonly [];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "getValidatorGroupSlashingMultiplier";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "epochNumber";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "index";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "groupMembershipInEpoch";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "address";
        readonly type: "address";
    }];
}];
