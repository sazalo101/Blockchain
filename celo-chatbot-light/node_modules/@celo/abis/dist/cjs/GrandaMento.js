"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.grandaMentoABI = void 0;
exports.grandaMentoABI = [
    {
        payable: false,
        stateMutability: 'nonpayable',
        type: 'constructor',
        inputs: [{ name: 'test', internalType: 'bool', type: 'bool' }],
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [{ name: 'approver', internalType: 'address', type: 'address', indexed: false }],
        name: 'ApproverSet',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [{ name: 'proposalId', internalType: 'uint256', type: 'uint256', indexed: true }],
        name: 'ExchangeProposalApproved',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [{ name: 'proposalId', internalType: 'uint256', type: 'uint256', indexed: true }],
        name: 'ExchangeProposalCancelled',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'proposalId', internalType: 'uint256', type: 'uint256', indexed: true },
            { name: 'exchanger', internalType: 'address', type: 'address', indexed: true },
            { name: 'stableTokenRegistryId', internalType: 'string', type: 'string', indexed: false },
            { name: 'sellAmount', internalType: 'uint256', type: 'uint256', indexed: false },
            { name: 'buyAmount', internalType: 'uint256', type: 'uint256', indexed: false },
            { name: 'sellCelo', internalType: 'bool', type: 'bool', indexed: false },
        ],
        name: 'ExchangeProposalCreated',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [{ name: 'proposalId', internalType: 'uint256', type: 'uint256', indexed: true }],
        name: 'ExchangeProposalExecuted',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            {
                name: 'maxApprovalExchangeRateChange',
                internalType: 'uint256',
                type: 'uint256',
                indexed: false,
            },
        ],
        name: 'MaxApprovalExchangeRateChangeSet',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
            { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
        ],
        name: 'OwnershipTransferred',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address', indexed: true }],
        name: 'RegistrySet',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [{ name: 'spread', internalType: 'uint256', type: 'uint256', indexed: false }],
        name: 'SpreadSet',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'stableTokenRegistryId', internalType: 'string', type: 'string', indexed: false },
            { name: 'minExchangeAmount', internalType: 'uint256', type: 'uint256', indexed: false },
            { name: 'maxExchangeAmount', internalType: 'uint256', type: 'uint256', indexed: false },
        ],
        name: 'StableTokenExchangeLimitsSet',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'vetoPeriodSeconds', internalType: 'uint256', type: 'uint256', indexed: false },
        ],
        name: 'VetoPeriodSecondsSet',
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
        name: 'activeProposalIdsSuperset',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'approver',
        outputs: [{ name: '', internalType: 'address', type: 'address' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'exchangeProposalCount',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
        name: 'exchangeProposals',
        outputs: [
            { name: 'exchanger', internalType: 'address payable', type: 'address' },
            { name: 'stableToken', internalType: 'address', type: 'address' },
            { name: 'state', internalType: 'enum GrandaMento.ExchangeProposalState', type: 'uint8' },
            { name: 'sellCelo', internalType: 'bool', type: 'bool' },
            { name: 'sellAmount', internalType: 'uint256', type: 'uint256' },
            { name: 'buyAmount', internalType: 'uint256', type: 'uint256' },
            { name: 'celoStableTokenExchangeRate', internalType: 'uint256', type: 'uint256' },
            { name: 'vetoPeriodSeconds', internalType: 'uint256', type: 'uint256' },
            { name: 'approvalTimestamp', internalType: 'uint256', type: 'uint256' },
        ],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'initialized',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'isOwner',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'maxApprovalExchangeRateChange',
        outputs: [{ name: 'value', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'owner',
        outputs: [{ name: '', internalType: 'address', type: 'address' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'registry',
        outputs: [{ name: '', internalType: 'contract IRegistry', type: 'address' }],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [],
        name: 'renounceOwnership',
        outputs: [],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address' }],
        name: 'setRegistry',
        outputs: [],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'spread',
        outputs: [{ name: 'value', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: '', internalType: 'string', type: 'string' }],
        name: 'stableTokenExchangeLimits',
        outputs: [
            { name: 'minExchangeAmount', internalType: 'uint256', type: 'uint256' },
            { name: 'maxExchangeAmount', internalType: 'uint256', type: 'uint256' },
        ],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
        name: 'transferOwnership',
        outputs: [],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'vetoPeriodSeconds',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'pure',
        type: 'function',
        inputs: [],
        name: 'getVersionNumber',
        outputs: [
            { name: '', internalType: 'uint256', type: 'uint256' },
            { name: '', internalType: 'uint256', type: 'uint256' },
            { name: '', internalType: 'uint256', type: 'uint256' },
            { name: '', internalType: 'uint256', type: 'uint256' },
        ],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: '_registry', internalType: 'address', type: 'address' },
            { name: '_approver', internalType: 'address', type: 'address' },
            { name: '_maxApprovalExchangeRateChange', internalType: 'uint256', type: 'uint256' },
            { name: '_spread', internalType: 'uint256', type: 'uint256' },
            { name: '_vetoPeriodSeconds', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'initialize',
        outputs: [],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'stableTokenRegistryId', internalType: 'string', type: 'string' },
            { name: 'sellAmount', internalType: 'uint256', type: 'uint256' },
            { name: 'sellCelo', internalType: 'bool', type: 'bool' },
        ],
        name: 'createExchangeProposal',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'proposalId', internalType: 'uint256', type: 'uint256' }],
        name: 'approveExchangeProposal',
        outputs: [],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'proposalId', internalType: 'uint256', type: 'uint256' }],
        name: 'cancelExchangeProposal',
        outputs: [],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'proposalId', internalType: 'uint256', type: 'uint256' }],
        name: 'executeExchangeProposal',
        outputs: [],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [
            { name: 'celoStableTokenExchangeRate', internalType: 'uint256', type: 'uint256' },
            { name: 'sellAmount', internalType: 'uint256', type: 'uint256' },
            { name: 'sellCelo', internalType: 'bool', type: 'bool' },
        ],
        name: 'getBuyAmount',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'index', internalType: 'uint256', type: 'uint256' }],
        name: 'removeFromActiveProposalIdsSuperset',
        outputs: [],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'getActiveProposalIds',
        outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'stableTokenRegistryId', internalType: 'string', type: 'string' }],
        name: 'getStableTokenExchangeLimits',
        outputs: [
            { name: '', internalType: 'uint256', type: 'uint256' },
            { name: '', internalType: 'uint256', type: 'uint256' },
        ],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'newApprover', internalType: 'address', type: 'address' }],
        name: 'setApprover',
        outputs: [],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'newMaxApprovalExchangeRateChange', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'setMaxApprovalExchangeRateChange',
        outputs: [],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'newSpread', internalType: 'uint256', type: 'uint256' }],
        name: 'setSpread',
        outputs: [],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'stableTokenRegistryId', internalType: 'string', type: 'string' },
            { name: 'minExchangeAmount', internalType: 'uint256', type: 'uint256' },
            { name: 'maxExchangeAmount', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'setStableTokenExchangeLimits',
        outputs: [],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'newVetoPeriodSeconds', internalType: 'uint256', type: 'uint256' }],
        name: 'setVetoPeriodSeconds',
        outputs: [],
    },
];
