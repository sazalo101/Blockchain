"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.electionABI = void 0;
exports.electionABI = [
    {
        payable: false,
        stateMutability: 'nonpayable',
        type: 'constructor',
        inputs: [{ name: 'test', internalType: 'bool', type: 'bool' }],
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'account', internalType: 'address', type: 'address', indexed: true },
            { name: 'flag', internalType: 'bool', type: 'bool', indexed: false },
        ],
        name: 'AllowedToVoteOverMaxNumberOfGroups',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'electabilityThreshold', internalType: 'uint256', type: 'uint256', indexed: false },
        ],
        name: 'ElectabilityThresholdSet',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'min', internalType: 'uint256', type: 'uint256', indexed: false },
            { name: 'max', internalType: 'uint256', type: 'uint256', indexed: false },
        ],
        name: 'ElectableValidatorsSet',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'group', internalType: 'address', type: 'address', indexed: true },
            { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
        ],
        name: 'EpochRewardsDistributedToVoters',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'maxNumGroupsVotedFor', internalType: 'uint256', type: 'uint256', indexed: false },
        ],
        name: 'MaxNumGroupsVotedForSet',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
            { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
        ],
        name: 'OwnershipTransferred',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address', indexed: true }],
        name: 'RegistrySet',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'account', internalType: 'address', type: 'address', indexed: true },
            { name: 'group', internalType: 'address', type: 'address', indexed: true },
            { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
            { name: 'units', internalType: 'uint256', type: 'uint256', indexed: false },
        ],
        name: 'ValidatorGroupActiveVoteRevoked',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [{ name: 'group', internalType: 'address', type: 'address', indexed: true }],
        name: 'ValidatorGroupMarkedEligible',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [{ name: 'group', internalType: 'address', type: 'address', indexed: true }],
        name: 'ValidatorGroupMarkedIneligible',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'account', internalType: 'address', type: 'address', indexed: true },
            { name: 'group', internalType: 'address', type: 'address', indexed: true },
            { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
        ],
        name: 'ValidatorGroupPendingVoteRevoked',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'account', internalType: 'address', type: 'address', indexed: true },
            { name: 'group', internalType: 'address', type: 'address', indexed: true },
            { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
            { name: 'units', internalType: 'uint256', type: 'uint256', indexed: false },
        ],
        name: 'ValidatorGroupVoteActivated',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'account', internalType: 'address', type: 'address', indexed: true },
            { name: 'group', internalType: 'address', type: 'address', indexed: true },
            { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
        ],
        name: 'ValidatorGroupVoteCast',
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: '', internalType: 'address', type: 'address' }],
        name: 'allowedToVoteOverMaxNumberOfGroups',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: '', internalType: 'address', type: 'address' }],
        name: 'cachedVotesByAccount',
        outputs: [{ name: 'totalVotes', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [
            { name: 'sender', internalType: 'address', type: 'address' },
            { name: 'blsKey', internalType: 'bytes', type: 'bytes' },
            { name: 'blsPop', internalType: 'bytes', type: 'bytes' },
        ],
        name: 'checkProofOfPossession',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'electabilityThreshold',
        outputs: [{ name: 'value', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'electableValidators',
        outputs: [
            { name: 'min', internalType: 'uint256', type: 'uint256' },
            { name: 'max', internalType: 'uint256', type: 'uint256' },
        ],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [
            { name: 'aNumerator', internalType: 'uint256', type: 'uint256' },
            { name: 'aDenominator', internalType: 'uint256', type: 'uint256' },
            { name: 'bNumerator', internalType: 'uint256', type: 'uint256' },
            { name: 'bDenominator', internalType: 'uint256', type: 'uint256' },
            { name: 'exponent', internalType: 'uint256', type: 'uint256' },
            { name: '_decimals', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'fractionMulExp',
        outputs: [
            { name: '', internalType: 'uint256', type: 'uint256' },
            { name: '', internalType: 'uint256', type: 'uint256' },
        ],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'header', internalType: 'bytes', type: 'bytes' }],
        name: 'getBlockNumberFromHeader',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'getEpochNumber',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
        name: 'getEpochNumberOfBlock',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'getEpochSize',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
        name: 'getParentSealBitmap',
        outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'header', internalType: 'bytes', type: 'bytes' }],
        name: 'getVerifiedSealBitmapFromHeader',
        outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'header', internalType: 'bytes', type: 'bytes' }],
        name: 'hashHeader',
        outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'initialized',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'isOwner',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'maxNumGroupsVotedFor',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
        name: 'minQuorumSize',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'minQuorumSizeInCurrentSet',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'numberValidatorsInCurrentSet',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
        name: 'numberValidatorsInSet',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'owner',
        outputs: [{ name: '', internalType: 'address', type: 'address' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'registry',
        outputs: [{ name: '', internalType: 'contract IRegistry', type: 'address' }],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [],
        name: 'renounceOwnership',
        outputs: [],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address' }],
        name: 'setRegistry',
        outputs: [],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
        name: 'transferOwnership',
        outputs: [],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'index', internalType: 'uint256', type: 'uint256' }],
        name: 'validatorSignerAddressFromCurrentSet',
        outputs: [{ name: '', internalType: 'address', type: 'address' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [
            { name: 'index', internalType: 'uint256', type: 'uint256' },
            { name: 'blockNumber', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'validatorSignerAddressFromSet',
        outputs: [{ name: '', internalType: 'address', type: 'address' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'pure',
        type: 'function',
        inputs: [],
        name: 'getVersionNumber',
        outputs: [
            { name: '', internalType: 'uint256', type: 'uint256' },
            { name: '', internalType: 'uint256', type: 'uint256' },
            { name: '', internalType: 'uint256', type: 'uint256' },
            { name: '', internalType: 'uint256', type: 'uint256' },
        ],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'registryAddress', internalType: 'address', type: 'address' },
            { name: 'minElectableValidators', internalType: 'uint256', type: 'uint256' },
            { name: 'maxElectableValidators', internalType: 'uint256', type: 'uint256' },
            { name: '_maxNumGroupsVotedFor', internalType: 'uint256', type: 'uint256' },
            { name: '_electabilityThreshold', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'initialize',
        outputs: [],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'min', internalType: 'uint256', type: 'uint256' },
            { name: 'max', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'setElectableValidators',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'getElectableValidators',
        outputs: [
            { name: '', internalType: 'uint256', type: 'uint256' },
            { name: '', internalType: 'uint256', type: 'uint256' },
        ],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: '_maxNumGroupsVotedFor', internalType: 'uint256', type: 'uint256' }],
        name: 'setMaxNumGroupsVotedFor',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'threshold', internalType: 'uint256', type: 'uint256' }],
        name: 'setElectabilityThreshold',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'getElectabilityThreshold',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'group', internalType: 'address', type: 'address' },
            { name: 'value', internalType: 'uint256', type: 'uint256' },
            { name: 'lesser', internalType: 'address', type: 'address' },
            { name: 'greater', internalType: 'address', type: 'address' },
        ],
        name: 'vote',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'group', internalType: 'address', type: 'address' }],
        name: 'activate',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'group', internalType: 'address', type: 'address' },
            { name: 'account', internalType: 'address', type: 'address' },
        ],
        name: 'activateForAccount',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [
            { name: 'account', internalType: 'address', type: 'address' },
            { name: 'group', internalType: 'address', type: 'address' },
        ],
        name: 'hasActivatablePendingVotes',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'group', internalType: 'address', type: 'address' },
            { name: 'value', internalType: 'uint256', type: 'uint256' },
            { name: 'lesser', internalType: 'address', type: 'address' },
            { name: 'greater', internalType: 'address', type: 'address' },
            { name: 'index', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'revokePending',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'group', internalType: 'address', type: 'address' },
            { name: 'lesser', internalType: 'address', type: 'address' },
            { name: 'greater', internalType: 'address', type: 'address' },
            { name: 'index', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'revokeAllActive',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'group', internalType: 'address', type: 'address' },
            { name: 'value', internalType: 'uint256', type: 'uint256' },
            { name: 'lesser', internalType: 'address', type: 'address' },
            { name: 'greater', internalType: 'address', type: 'address' },
            { name: 'index', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'revokeActive',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
        name: 'getTotalVotesByAccount',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'account', internalType: 'address', type: 'address' },
            { name: 'group', internalType: 'address', type: 'address' },
        ],
        name: 'updateTotalVotesByAccountForGroup',
        outputs: [],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [
            { name: 'group', internalType: 'address', type: 'address' },
            { name: 'account', internalType: 'address', type: 'address' },
        ],
        name: 'getPendingVotesForGroupByAccount',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [
            { name: 'group', internalType: 'address', type: 'address' },
            { name: 'account', internalType: 'address', type: 'address' },
        ],
        name: 'getActiveVotesForGroupByAccount',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [
            { name: 'group', internalType: 'address', type: 'address' },
            { name: 'account', internalType: 'address', type: 'address' },
        ],
        name: 'getTotalVotesForGroupByAccount',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [
            { name: 'group', internalType: 'address', type: 'address' },
            { name: 'account', internalType: 'address', type: 'address' },
        ],
        name: 'getActiveVoteUnitsForGroupByAccount',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'group', internalType: 'address', type: 'address' }],
        name: 'getActiveVoteUnitsForGroup',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'group', internalType: 'address', type: 'address' }],
        name: 'getTotalVotesForGroup',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'group', internalType: 'address', type: 'address' }],
        name: 'getActiveVotesForGroup',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'group', internalType: 'address', type: 'address' }],
        name: 'getPendingVotesForGroup',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'group', internalType: 'address', type: 'address' }],
        name: 'getGroupEligibility',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [
            { name: 'group', internalType: 'address', type: 'address' },
            { name: 'totalEpochRewards', internalType: 'uint256', type: 'uint256' },
            { name: 'uptimes', internalType: 'uint256[]', type: 'uint256[]' },
        ],
        name: 'getGroupEpochRewards',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'group', internalType: 'address', type: 'address' },
            { name: 'value', internalType: 'uint256', type: 'uint256' },
            { name: 'lesser', internalType: 'address', type: 'address' },
            { name: 'greater', internalType: 'address', type: 'address' },
        ],
        name: 'distributeEpochRewards',
        outputs: [],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'group', internalType: 'address', type: 'address' }],
        name: 'markGroupIneligible',
        outputs: [],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'group', internalType: 'address', type: 'address' },
            { name: 'lesser', internalType: 'address', type: 'address' },
            { name: 'greater', internalType: 'address', type: 'address' },
        ],
        name: 'markGroupEligible',
        outputs: [],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
        name: 'getGroupsVotedForByAccount',
        outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [
            { name: 'group', internalType: 'address', type: 'address' },
            { name: 'value', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'canReceiveVotes',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'group', internalType: 'address', type: 'address' }],
        name: 'getNumVotesReceivable',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'getTotalVotes',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'getActiveVotes',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'getEligibleValidatorGroups',
        outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'getTotalVotesForEligibleValidatorGroups',
        outputs: [
            { name: 'groups', internalType: 'address[]', type: 'address[]' },
            { name: 'values', internalType: 'uint256[]', type: 'uint256[]' },
        ],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'electValidatorSigners',
        outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [
            { name: 'minElectableValidators', internalType: 'uint256', type: 'uint256' },
            { name: 'maxElectableValidators', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'electNValidatorSigners',
        outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'getCurrentValidatorSigners',
        outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
        name: 'setAllowedToVoteOverMaxNumberOfGroups',
        outputs: [],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'account', internalType: 'address', type: 'address' },
            { name: 'value', internalType: 'uint256', type: 'uint256' },
            { name: 'lessers', internalType: 'address[]', type: 'address[]' },
            { name: 'greaters', internalType: 'address[]', type: 'address[]' },
            { name: 'indices', internalType: 'uint256[]', type: 'uint256[]' },
        ],
        name: 'forceDecrementVotes',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
];
