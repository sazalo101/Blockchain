"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.blockchainParametersABI = void 0;
exports.blockchainParametersABI = [
    {
        payable: false,
        stateMutability: 'nonpayable',
        type: 'constructor',
        inputs: [{ name: 'test', internalType: 'bool', type: 'bool' }],
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [{ name: 'limit', internalType: 'uint256', type: 'uint256', indexed: false }],
        name: 'BlockGasLimitSet',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [{ name: 'gas', internalType: 'uint256', type: 'uint256', indexed: false }],
        name: 'IntrinsicGasForAlternativeFeeCurrencySet',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
            { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
        ],
        name: 'OwnershipTransferred',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'window', internalType: 'uint256', type: 'uint256', indexed: false },
            { name: 'activationEpoch', internalType: 'uint256', type: 'uint256', indexed: false },
        ],
        name: 'UptimeLookbackWindowSet',
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'blockGasLimit',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [
            { name: 'sender', internalType: 'address', type: 'address' },
            { name: 'blsKey', internalType: 'bytes', type: 'bytes' },
            { name: 'blsPop', internalType: 'bytes', type: 'bytes' },
        ],
        name: 'checkProofOfPossession',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [
            { name: 'aNumerator', internalType: 'uint256', type: 'uint256' },
            { name: 'aDenominator', internalType: 'uint256', type: 'uint256' },
            { name: 'bNumerator', internalType: 'uint256', type: 'uint256' },
            { name: 'bDenominator', internalType: 'uint256', type: 'uint256' },
            { name: 'exponent', internalType: 'uint256', type: 'uint256' },
            { name: '_decimals', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'fractionMulExp',
        outputs: [
            { name: '', internalType: 'uint256', type: 'uint256' },
            { name: '', internalType: 'uint256', type: 'uint256' },
        ],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'header', internalType: 'bytes', type: 'bytes' }],
        name: 'getBlockNumberFromHeader',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'getEpochNumber',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
        name: 'getEpochNumberOfBlock',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'getEpochSize',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
        name: 'getParentSealBitmap',
        outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'header', internalType: 'bytes', type: 'bytes' }],
        name: 'getVerifiedSealBitmapFromHeader',
        outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'header', internalType: 'bytes', type: 'bytes' }],
        name: 'hashHeader',
        outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'initialized',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'intrinsicGasForAlternativeFeeCurrency',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'isOwner',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
        name: 'minQuorumSize',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'minQuorumSizeInCurrentSet',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'numberValidatorsInCurrentSet',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
        name: 'numberValidatorsInSet',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'owner',
        outputs: [{ name: '', internalType: 'address', type: 'address' }],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [],
        name: 'renounceOwnership',
        outputs: [],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
        name: 'transferOwnership',
        outputs: [],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'uptimeLookbackWindow',
        outputs: [
            { name: 'oldValue', internalType: 'uint256', type: 'uint256' },
            { name: 'nextValue', internalType: 'uint256', type: 'uint256' },
            { name: 'nextValueActivationEpoch', internalType: 'uint256', type: 'uint256' },
        ],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'index', internalType: 'uint256', type: 'uint256' }],
        name: 'validatorSignerAddressFromCurrentSet',
        outputs: [{ name: '', internalType: 'address', type: 'address' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [
            { name: 'index', internalType: 'uint256', type: 'uint256' },
            { name: 'blockNumber', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'validatorSignerAddressFromSet',
        outputs: [{ name: '', internalType: 'address', type: 'address' }],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: '_gasForNonGoldCurrencies', internalType: 'uint256', type: 'uint256' },
            { name: 'gasLimit', internalType: 'uint256', type: 'uint256' },
            { name: 'lookbackWindow', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'initialize',
        outputs: [],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'pure',
        type: 'function',
        inputs: [],
        name: 'getVersionNumber',
        outputs: [
            { name: '', internalType: 'uint256', type: 'uint256' },
            { name: '', internalType: 'uint256', type: 'uint256' },
            { name: '', internalType: 'uint256', type: 'uint256' },
            { name: '', internalType: 'uint256', type: 'uint256' },
        ],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'gasLimit', internalType: 'uint256', type: 'uint256' }],
        name: 'setBlockGasLimit',
        outputs: [],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'gas', internalType: 'uint256', type: 'uint256' }],
        name: 'setIntrinsicGasForAlternativeFeeCurrency',
        outputs: [],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'window', internalType: 'uint256', type: 'uint256' }],
        name: 'setUptimeLookbackWindow',
        outputs: [],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'getUptimeLookbackWindow',
        outputs: [{ name: 'lookbackWindow', internalType: 'uint256', type: 'uint256' }],
    },
];
