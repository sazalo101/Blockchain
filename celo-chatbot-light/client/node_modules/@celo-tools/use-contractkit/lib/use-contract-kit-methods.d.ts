import { CeloTokenContract, ContractKit } from '@celo/contractkit';
import { Dispatcher } from './contract-kit-provider';
import { Connector, Network } from './types';
export declare function useContractKitMethods({ connector, networks, network, }: {
    connector: Connector;
    networks: Network[];
    network: Network;
}, dispatch: Dispatcher): ContractKitMethods;
export interface ContractKitMethods {
    destroy: () => Promise<void>;
    initConnector: (connector: Connector) => Promise<Connector>;
    updateNetwork: (network: Network) => Promise<void>;
    connect: () => Promise<Connector>;
    getConnectedKit: () => Promise<ContractKit>;
    performActions: (...operations: ((kit: ContractKit) => unknown | Promise<unknown>)[]) => Promise<unknown[]>;
    updateFeeCurrency: (newFeeCurrency: CeloTokenContract) => Promise<void>;
}
//# sourceMappingURL=use-contract-kit-methods.d.ts.map