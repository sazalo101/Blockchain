"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.useContractKitInternal = exports.useContractKit = void 0;
var contract_kit_provider_1 = require("./contract-kit-provider");
var useContractKit = function () {
    var _a = __read((0, contract_kit_provider_1.useContractKitContext)(), 3), _b = _a[0], dapp = _b.dapp, connector = _b.connector, connectorInitError = _b.connectorInitError, address = _b.address, network = _b.network, feeCurrency = _b.feeCurrency, _dispatch = _a[1], _c = _a[2], destroy = _c.destroy, updateNetwork = _c.updateNetwork, connect = _c.connect, getConnectedKit = _c.getConnectedKit, performActions = _c.performActions, updateFeeCurrency = _c.updateFeeCurrency;
    return {
        address: address,
        dapp: dapp,
        network: network,
        updateFeeCurrency: updateFeeCurrency,
        updateNetwork: updateNetwork,
        kit: connector.kit,
        walletType: connector.type,
        account: connector.account,
        initialised: connector.initialised,
        feeCurrency: feeCurrency,
        performActions: performActions,
        getConnectedKit: getConnectedKit,
        connect: connect,
        destroy: destroy,
        initError: connectorInitError,
    };
};
exports.useContractKit = useContractKit;
/**
 * useContractKit with internal methods exposed. Package use only.
 */
var useContractKitInternal = function () {
    var _a = __read((0, contract_kit_provider_1.useContractKitContext)(), 3), _b = _a[0], pendingActionCount = _b.pendingActionCount, connectionCallback = _b.connectionCallback, _dispatch = _a[1], initConnector = _a[2].initConnector;
    return __assign(__assign({}, (0, exports.useContractKit)()), { connectionCallback: connectionCallback, initConnector: initConnector, pendingActionCount: pendingActionCount });
};
exports.useContractKitInternal = useContractKitInternal;
//# sourceMappingURL=use-contractkit.js.map