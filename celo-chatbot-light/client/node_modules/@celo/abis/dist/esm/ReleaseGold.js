export const releaseGoldABI = [
    {
        payable: false,
        stateMutability: 'nonpayable',
        type: 'constructor',
        inputs: [{ name: 'test', internalType: 'bool', type: 'bool' }],
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [{ name: 'beneficiary', internalType: 'address', type: 'address', indexed: true }],
        name: 'BeneficiarySet',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [{ name: 'canExpire', internalType: 'bool', type: 'bool', indexed: false }],
        name: 'CanExpireSet',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'beneficiary', internalType: 'address', type: 'address', indexed: true },
            { name: 'maxDistribution', internalType: 'uint256', type: 'uint256', indexed: false },
        ],
        name: 'DistributionLimitSet',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [{ name: 'beneficiary', internalType: 'address', type: 'address', indexed: true }],
        name: 'LiquidityProvisionSet',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
            { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
        ],
        name: 'OwnershipTransferred',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address', indexed: true }],
        name: 'RegistrySet',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'beneficiary', internalType: 'address', type: 'address', indexed: true },
            { name: 'atAddress', internalType: 'address', type: 'address', indexed: true },
        ],
        name: 'ReleaseGoldInstanceCreated',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'beneficiary', internalType: 'address', type: 'address', indexed: true },
            { name: 'atAddress', internalType: 'address', type: 'address', indexed: true },
        ],
        name: 'ReleaseGoldInstanceDestroyed',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'revokeTimestamp', internalType: 'uint256', type: 'uint256', indexed: false },
            { name: 'releasedBalanceAtRevoke', internalType: 'uint256', type: 'uint256', indexed: false },
        ],
        name: 'ReleaseScheduleRevoked',
    },
    { payable: true, stateMutability: 'payable', type: 'fallback' },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'EXPIRATION_TIME',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'beneficiary',
        outputs: [{ name: '', internalType: 'address payable', type: 'address' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'canValidate',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'canVote',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'initialized',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'isOwner',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'liquidityProvisionMet',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'maxDistribution',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'owner',
        outputs: [{ name: '', internalType: 'address', type: 'address' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'refundAddress',
        outputs: [{ name: '', internalType: 'address payable', type: 'address' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'registry',
        outputs: [{ name: '', internalType: 'contract IRegistry', type: 'address' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'releaseOwner',
        outputs: [{ name: '', internalType: 'address', type: 'address' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'releaseSchedule',
        outputs: [
            { name: 'releaseStartTime', internalType: 'uint256', type: 'uint256' },
            { name: 'releaseCliff', internalType: 'uint256', type: 'uint256' },
            { name: 'numReleasePeriods', internalType: 'uint256', type: 'uint256' },
            { name: 'releasePeriod', internalType: 'uint256', type: 'uint256' },
            { name: 'amountReleasedPerPeriod', internalType: 'uint256', type: 'uint256' },
        ],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [],
        name: 'renounceOwnership',
        outputs: [],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'revocationInfo',
        outputs: [
            { name: 'revocable', internalType: 'bool', type: 'bool' },
            { name: 'canExpire', internalType: 'bool', type: 'bool' },
            { name: 'releasedBalanceAtRevoke', internalType: 'uint256', type: 'uint256' },
            { name: 'revokeTime', internalType: 'uint256', type: 'uint256' },
        ],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address' }],
        name: 'setRegistry',
        outputs: [],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'totalWithdrawn',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
        name: 'transferOwnership',
        outputs: [],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'isFunded',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'to', internalType: 'address', type: 'address' },
            { name: 'value', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'transfer',
        outputs: [],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'erc20', internalType: 'address', type: 'address' },
            { name: 'to', internalType: 'address', type: 'address' },
            { name: 'value', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'genericTransfer',
        outputs: [],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'releaseStartTime', internalType: 'uint256', type: 'uint256' },
            { name: 'releaseCliffTime', internalType: 'uint256', type: 'uint256' },
            { name: 'numReleasePeriods', internalType: 'uint256', type: 'uint256' },
            { name: 'releasePeriod', internalType: 'uint256', type: 'uint256' },
            { name: 'amountReleasedPerPeriod', internalType: 'uint256', type: 'uint256' },
            { name: 'revocable', internalType: 'bool', type: 'bool' },
            { name: '_beneficiary', internalType: 'address payable', type: 'address' },
            { name: '_releaseOwner', internalType: 'address', type: 'address' },
            { name: '_refundAddress', internalType: 'address payable', type: 'address' },
            { name: 'subjectToLiquidityProvision', internalType: 'bool', type: 'bool' },
            { name: 'initialDistributionRatio', internalType: 'uint256', type: 'uint256' },
            { name: '_canValidate', internalType: 'bool', type: 'bool' },
            { name: '_canVote', internalType: 'bool', type: 'bool' },
            { name: 'registryAddress', internalType: 'address', type: 'address' },
        ],
        name: 'initialize',
        outputs: [],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'isRevoked',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [],
        name: 'setLiquidityProvision',
        outputs: [],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: '_canExpire', internalType: 'bool', type: 'bool' }],
        name: 'setCanExpire',
        outputs: [],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'distributionRatio', internalType: 'uint256', type: 'uint256' }],
        name: 'setMaxDistribution',
        outputs: [],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'newBeneficiary', internalType: 'address payable', type: 'address' }],
        name: 'setBeneficiary',
        outputs: [],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'amount', internalType: 'uint256', type: 'uint256' }],
        name: 'withdraw',
        outputs: [],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [],
        name: 'refundAndFinalize',
        outputs: [],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [],
        name: 'revoke',
        outputs: [],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [],
        name: 'expire',
        outputs: [],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'getTotalBalance',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'getRemainingTotalBalance',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'getRemainingUnlockedBalance',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'getRemainingLockedBalance',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'getCurrentReleasedTotalAmount',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'value', internalType: 'uint256', type: 'uint256' }],
        name: 'lockGold',
        outputs: [],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'value', internalType: 'uint256', type: 'uint256' }],
        name: 'unlockGold',
        outputs: [],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'index', internalType: 'uint256', type: 'uint256' },
            { name: 'value', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'relockGold',
        outputs: [],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'index', internalType: 'uint256', type: 'uint256' }],
        name: 'withdrawLockedGold',
        outputs: [],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'signer', internalType: 'address payable', type: 'address' },
            { name: 'v', internalType: 'uint8', type: 'uint8' },
            { name: 'r', internalType: 'bytes32', type: 'bytes32' },
            { name: 's', internalType: 'bytes32', type: 'bytes32' },
        ],
        name: 'authorizeVoteSigner',
        outputs: [],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'signer', internalType: 'address payable', type: 'address' },
            { name: 'v', internalType: 'uint8', type: 'uint8' },
            { name: 'r', internalType: 'bytes32', type: 'bytes32' },
            { name: 's', internalType: 'bytes32', type: 'bytes32' },
        ],
        name: 'authorizeValidatorSigner',
        outputs: [],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'signer', internalType: 'address payable', type: 'address' },
            { name: 'v', internalType: 'uint8', type: 'uint8' },
            { name: 'r', internalType: 'bytes32', type: 'bytes32' },
            { name: 's', internalType: 'bytes32', type: 'bytes32' },
            { name: 'ecdsaPublicKey', internalType: 'bytes', type: 'bytes' },
        ],
        name: 'authorizeValidatorSignerWithPublicKey',
        outputs: [],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'signer', internalType: 'address payable', type: 'address' },
            { name: 'v', internalType: 'uint8', type: 'uint8' },
            { name: 'r', internalType: 'bytes32', type: 'bytes32' },
            { name: 's', internalType: 'bytes32', type: 'bytes32' },
            { name: 'ecdsaPublicKey', internalType: 'bytes', type: 'bytes' },
            { name: 'blsPublicKey', internalType: 'bytes', type: 'bytes' },
            { name: 'blsPop', internalType: 'bytes', type: 'bytes' },
        ],
        name: 'authorizeValidatorSignerWithKeys',
        outputs: [],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'signer', internalType: 'address payable', type: 'address' },
            { name: 'v', internalType: 'uint8', type: 'uint8' },
            { name: 'r', internalType: 'bytes32', type: 'bytes32' },
            { name: 's', internalType: 'bytes32', type: 'bytes32' },
        ],
        name: 'authorizeAttestationSigner',
        outputs: [],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'name', internalType: 'string', type: 'string' },
            { name: 'dataEncryptionKey', internalType: 'bytes', type: 'bytes' },
            { name: 'walletAddress', internalType: 'address', type: 'address' },
            { name: 'v', internalType: 'uint8', type: 'uint8' },
            { name: 'r', internalType: 'bytes32', type: 'bytes32' },
            { name: 's', internalType: 'bytes32', type: 'bytes32' },
        ],
        name: 'setAccount',
        outputs: [],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [],
        name: 'createAccount',
        outputs: [],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'name', internalType: 'string', type: 'string' }],
        name: 'setAccountName',
        outputs: [],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'walletAddress', internalType: 'address', type: 'address' },
            { name: 'v', internalType: 'uint8', type: 'uint8' },
            { name: 'r', internalType: 'bytes32', type: 'bytes32' },
            { name: 's', internalType: 'bytes32', type: 'bytes32' },
        ],
        name: 'setAccountWalletAddress',
        outputs: [],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'dataEncryptionKey', internalType: 'bytes', type: 'bytes' }],
        name: 'setAccountDataEncryptionKey',
        outputs: [],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'metadataURL', internalType: 'string', type: 'string' }],
        name: 'setAccountMetadataURL',
        outputs: [],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'group', internalType: 'address', type: 'address' },
            { name: 'value', internalType: 'uint256', type: 'uint256' },
            { name: 'lesser', internalType: 'address', type: 'address' },
            { name: 'greater', internalType: 'address', type: 'address' },
            { name: 'index', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'revokeActive',
        outputs: [],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'group', internalType: 'address', type: 'address' },
            { name: 'value', internalType: 'uint256', type: 'uint256' },
            { name: 'lesser', internalType: 'address', type: 'address' },
            { name: 'greater', internalType: 'address', type: 'address' },
            { name: 'index', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'revokePending',
        outputs: [],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'getWithdrawableAmount',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
];
