export const epochRewardsABI = [
    {
        payable: false,
        stateMutability: 'nonpayable',
        type: 'constructor',
        inputs: [{ name: 'test', internalType: 'bool', type: 'bool' }],
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'partner', internalType: 'address', type: 'address', indexed: true },
            { name: 'fraction', internalType: 'uint256', type: 'uint256', indexed: false },
        ],
        name: 'CarbonOffsettingFundSet',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [{ name: 'fraction', internalType: 'uint256', type: 'uint256', indexed: false }],
        name: 'CommunityRewardFractionSet',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
            { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
        ],
        name: 'OwnershipTransferred',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address', indexed: true }],
        name: 'RegistrySet',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'max', internalType: 'uint256', type: 'uint256', indexed: false },
            {
                name: 'underspendAdjustmentFactor',
                internalType: 'uint256',
                type: 'uint256',
                indexed: false,
            },
            {
                name: 'overspendAdjustmentFactor',
                internalType: 'uint256',
                type: 'uint256',
                indexed: false,
            },
        ],
        name: 'RewardsMultiplierParametersSet',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [{ name: 'payment', internalType: 'uint256', type: 'uint256', indexed: false }],
        name: 'TargetValidatorEpochPaymentSet',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [{ name: 'fraction', internalType: 'uint256', type: 'uint256', indexed: false }],
        name: 'TargetVotingGoldFractionSet',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'max', internalType: 'uint256', type: 'uint256', indexed: false },
            { name: 'adjustmentFactor', internalType: 'uint256', type: 'uint256', indexed: false },
        ],
        name: 'TargetVotingYieldParametersSet',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [{ name: 'target', internalType: 'uint256', type: 'uint256', indexed: false }],
        name: 'TargetVotingYieldSet',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [{ name: 'fraction', internalType: 'uint256', type: 'uint256', indexed: false }],
        name: 'TargetVotingYieldUpdated',
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'carbonOffsettingPartner',
        outputs: [{ name: '', internalType: 'address', type: 'address' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [
            { name: 'sender', internalType: 'address', type: 'address' },
            { name: 'blsKey', internalType: 'bytes', type: 'bytes' },
            { name: 'blsPop', internalType: 'bytes', type: 'bytes' },
        ],
        name: 'checkProofOfPossession',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [
            { name: 'aNumerator', internalType: 'uint256', type: 'uint256' },
            { name: 'aDenominator', internalType: 'uint256', type: 'uint256' },
            { name: 'bNumerator', internalType: 'uint256', type: 'uint256' },
            { name: 'bDenominator', internalType: 'uint256', type: 'uint256' },
            { name: 'exponent', internalType: 'uint256', type: 'uint256' },
            { name: '_decimals', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'fractionMulExp',
        outputs: [
            { name: '', internalType: 'uint256', type: 'uint256' },
            { name: '', internalType: 'uint256', type: 'uint256' },
        ],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'header', internalType: 'bytes', type: 'bytes' }],
        name: 'getBlockNumberFromHeader',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'getEpochNumber',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
        name: 'getEpochNumberOfBlock',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'getEpochSize',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
        name: 'getParentSealBitmap',
        outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'header', internalType: 'bytes', type: 'bytes' }],
        name: 'getVerifiedSealBitmapFromHeader',
        outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'header', internalType: 'bytes', type: 'bytes' }],
        name: 'hashHeader',
        outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'initialized',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'isOwner',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
        name: 'minQuorumSize',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'minQuorumSizeInCurrentSet',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'numberValidatorsInCurrentSet',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
        name: 'numberValidatorsInSet',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'owner',
        outputs: [{ name: '', internalType: 'address', type: 'address' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'registry',
        outputs: [{ name: '', internalType: 'contract IRegistry', type: 'address' }],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [],
        name: 'renounceOwnership',
        outputs: [],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address' }],
        name: 'setRegistry',
        outputs: [],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'startTime',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'targetValidatorEpochPayment',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
        name: 'transferOwnership',
        outputs: [],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'index', internalType: 'uint256', type: 'uint256' }],
        name: 'validatorSignerAddressFromCurrentSet',
        outputs: [{ name: '', internalType: 'address', type: 'address' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [
            { name: 'index', internalType: 'uint256', type: 'uint256' },
            { name: 'blockNumber', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'validatorSignerAddressFromSet',
        outputs: [{ name: '', internalType: 'address', type: 'address' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'pure',
        type: 'function',
        inputs: [],
        name: 'getVersionNumber',
        outputs: [
            { name: '', internalType: 'uint256', type: 'uint256' },
            { name: '', internalType: 'uint256', type: 'uint256' },
            { name: '', internalType: 'uint256', type: 'uint256' },
            { name: '', internalType: 'uint256', type: 'uint256' },
        ],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'registryAddress', internalType: 'address', type: 'address' },
            { name: 'targetVotingYieldInitial', internalType: 'uint256', type: 'uint256' },
            { name: 'targetVotingYieldMax', internalType: 'uint256', type: 'uint256' },
            { name: 'targetVotingYieldAdjustmentFactor', internalType: 'uint256', type: 'uint256' },
            { name: 'rewardsMultiplierMax', internalType: 'uint256', type: 'uint256' },
            {
                name: 'rewardsMultiplierUnderspendAdjustmentFactor',
                internalType: 'uint256',
                type: 'uint256',
            },
            {
                name: 'rewardsMultiplierOverspendAdjustmentFactor',
                internalType: 'uint256',
                type: 'uint256',
            },
            { name: '_targetVotingGoldFraction', internalType: 'uint256', type: 'uint256' },
            { name: '_targetValidatorEpochPayment', internalType: 'uint256', type: 'uint256' },
            { name: '_communityRewardFraction', internalType: 'uint256', type: 'uint256' },
            { name: '_carbonOffsettingPartner', internalType: 'address', type: 'address' },
            { name: '_carbonOffsettingFraction', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'initialize',
        outputs: [],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'getTargetVotingYieldParameters',
        outputs: [
            { name: '', internalType: 'uint256', type: 'uint256' },
            { name: '', internalType: 'uint256', type: 'uint256' },
            { name: '', internalType: 'uint256', type: 'uint256' },
        ],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'getRewardsMultiplierParameters',
        outputs: [
            { name: '', internalType: 'uint256', type: 'uint256' },
            { name: '', internalType: 'uint256', type: 'uint256' },
            { name: '', internalType: 'uint256', type: 'uint256' },
        ],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'value', internalType: 'uint256', type: 'uint256' }],
        name: 'setCommunityRewardFraction',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'getCommunityRewardFraction',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'partner', internalType: 'address', type: 'address' },
            { name: 'value', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'setCarbonOffsettingFund',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'getCarbonOffsettingFraction',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'value', internalType: 'uint256', type: 'uint256' }],
        name: 'setTargetVotingGoldFraction',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'getTargetVotingGoldFraction',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'value', internalType: 'uint256', type: 'uint256' }],
        name: 'setTargetValidatorEpochPayment',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'max', internalType: 'uint256', type: 'uint256' },
            { name: 'underspendAdjustmentFactor', internalType: 'uint256', type: 'uint256' },
            { name: 'overspendAdjustmentFactor', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'setRewardsMultiplierParameters',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'max', internalType: 'uint256', type: 'uint256' },
            { name: 'adjustmentFactor', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'setTargetVotingYieldParameters',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'targetVotingYield', internalType: 'uint256', type: 'uint256' }],
        name: 'setTargetVotingYield',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'getTargetGoldTotalSupply',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'getTargetVoterRewards',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'getTargetTotalEpochPaymentsInGold',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'getRewardsMultiplier',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'getVotingGoldFraction',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [],
        name: 'updateTargetVotingYield',
        outputs: [],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'isReserveLow',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'calculateTargetEpochRewards',
        outputs: [
            { name: '', internalType: 'uint256', type: 'uint256' },
            { name: '', internalType: 'uint256', type: 'uint256' },
            { name: '', internalType: 'uint256', type: 'uint256' },
            { name: '', internalType: 'uint256', type: 'uint256' },
        ],
    },
];
