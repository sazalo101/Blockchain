export declare const governanceABI: readonly [{
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "constructor";
    readonly inputs: readonly [{
        readonly name: "test";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "approver";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }];
    readonly name: "ApproverSet";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "concurrentProposals";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "ConcurrentProposalsSet";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "destination";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "functionId";
        readonly internalType: "bytes4";
        readonly type: "bytes4";
        readonly indexed: true;
    }, {
        readonly name: "threshold";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "ConstitutionSet";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "dequeueFrequency";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "DequeueFrequencySet";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "executionStageDuration";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "ExecutionStageDurationSet";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "hash";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
        readonly indexed: true;
    }];
    readonly name: "HotfixApproved";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "hash";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
        readonly indexed: true;
    }];
    readonly name: "HotfixExecuted";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "hash";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
        readonly indexed: true;
    }, {
        readonly name: "epoch";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: true;
    }];
    readonly name: "HotfixPrepared";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "hash";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
        readonly indexed: true;
    }, {
        readonly name: "whitelister";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: false;
    }];
    readonly name: "HotfixWhitelisted";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "minDeposit";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "MinDepositSet";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "previousOwner";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "newOwner";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }];
    readonly name: "OwnershipTransferred";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "baselineQuorumFactor";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "ParticipationBaselineQuorumFactorSet";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "baselineUpdateFactor";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "ParticipationBaselineUpdateFactorSet";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "participationBaseline";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "ParticipationBaselineUpdated";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "participationFloor";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "ParticipationFloorSet";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "proposalId";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: true;
    }];
    readonly name: "ProposalApproved";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "proposalId";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: true;
    }, {
        readonly name: "timestamp";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "ProposalDequeued";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "proposalId";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: true;
    }];
    readonly name: "ProposalExecuted";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "proposalId";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: true;
    }];
    readonly name: "ProposalExpired";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "proposalId";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: true;
    }, {
        readonly name: "proposer";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "transactionCount";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }, {
        readonly name: "deposit";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }, {
        readonly name: "timestamp";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "ProposalQueued";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "proposalId";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: true;
    }, {
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "revokedUpvotes";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "ProposalUpvoteRevoked";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "proposalId";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: true;
    }, {
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "upvotes";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "ProposalUpvoted";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "proposalId";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: true;
    }, {
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "value";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }, {
        readonly name: "weight";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "ProposalVoteRevoked";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "proposalId";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: true;
    }, {
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "yesVotes";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }, {
        readonly name: "noVotes";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }, {
        readonly name: "abstainVotes";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "ProposalVoteRevokedV2";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "proposalId";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: true;
    }, {
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "value";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }, {
        readonly name: "weight";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "ProposalVoted";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "proposalId";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: true;
    }, {
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "yesVotes";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }, {
        readonly name: "noVotes";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }, {
        readonly name: "abstainVotes";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "ProposalVotedV2";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "queueExpiry";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "QueueExpirySet";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "referendumStageDuration";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "ReferendumStageDurationSet";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "registryAddress";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }];
    readonly name: "RegistrySet";
}, {
    readonly payable: true;
    readonly stateMutability: "payable";
    readonly type: "fallback";
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "approver";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "address";
        readonly type: "address";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "sender";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "blsKey";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }, {
        readonly name: "blsPop";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "checkProofOfPossession";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "concurrentProposals";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "dequeueFrequency";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "dequeued";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "emptyIndices";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "aNumerator";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "aDenominator";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "bNumerator";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "bDenominator";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "exponent";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "_decimals";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "fractionMulExp";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "header";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "getBlockNumberFromHeader";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "getEpochNumber";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "blockNumber";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "getEpochNumberOfBlock";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "getEpochSize";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "blockNumber";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "getParentSealBitmap";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "header";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "getVerifiedSealBitmapFromHeader";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "header";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "hashHeader";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }];
    readonly name: "hotfixes";
    readonly outputs: readonly [{
        readonly name: "executed";
        readonly internalType: "bool";
        readonly type: "bool";
    }, {
        readonly name: "approved";
        readonly internalType: "bool";
        readonly type: "bool";
    }, {
        readonly name: "preparedEpoch";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "initialized";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "isOwner";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "lastDequeue";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "minDeposit";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "blockNumber";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "minQuorumSize";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "minQuorumSizeInCurrentSet";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "numberValidatorsInCurrentSet";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "blockNumber";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "numberValidatorsInSet";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "owner";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "address";
        readonly type: "address";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "proposalCount";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "queueExpiry";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "refundedDeposits";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "registry";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "contract IRegistry";
        readonly type: "address";
    }];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "renounceOwnership";
    readonly outputs: readonly [];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "registryAddress";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "setRegistry";
    readonly outputs: readonly [];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "stageDurations";
    readonly outputs: readonly [{
        readonly name: "approval";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "referendum";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "execution";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "newOwner";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "transferOwnership";
    readonly outputs: readonly [];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "index";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "validatorSignerAddressFromCurrentSet";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "address";
        readonly type: "address";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "index";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "blockNumber";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "validatorSignerAddressFromSet";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "address";
        readonly type: "address";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "pure";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "getVersionNumber";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "registryAddress";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "_approver";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "_concurrentProposals";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "_minDeposit";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "_queueExpiry";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "_dequeueFrequency";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "referendumStageDuration";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "executionStageDuration";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "participationBaseline";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "participationFloor";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "baselineUpdateFactor";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "baselineQuorumFactor";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "initialize";
    readonly outputs: readonly [];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "_approver";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "setApprover";
    readonly outputs: readonly [];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "_concurrentProposals";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "setConcurrentProposals";
    readonly outputs: readonly [];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "_minDeposit";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "setMinDeposit";
    readonly outputs: readonly [];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "_queueExpiry";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "setQueueExpiry";
    readonly outputs: readonly [];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "_dequeueFrequency";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "setDequeueFrequency";
    readonly outputs: readonly [];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "referendumStageDuration";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "setReferendumStageDuration";
    readonly outputs: readonly [];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "executionStageDuration";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "setExecutionStageDuration";
    readonly outputs: readonly [];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "participationBaseline";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "setParticipationBaseline";
    readonly outputs: readonly [];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "participationFloor";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "setParticipationFloor";
    readonly outputs: readonly [];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "baselineUpdateFactor";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "setBaselineUpdateFactor";
    readonly outputs: readonly [];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "baselineQuorumFactor";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "setBaselineQuorumFactor";
    readonly outputs: readonly [];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "destination";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "functionId";
        readonly internalType: "bytes4";
        readonly type: "bytes4";
    }, {
        readonly name: "threshold";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "setConstitution";
    readonly outputs: readonly [];
}, {
    readonly constant: false;
    readonly payable: true;
    readonly stateMutability: "payable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "values";
        readonly internalType: "uint256[]";
        readonly type: "uint256[]";
    }, {
        readonly name: "destinations";
        readonly internalType: "address[]";
        readonly type: "address[]";
    }, {
        readonly name: "data";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }, {
        readonly name: "dataLengths";
        readonly internalType: "uint256[]";
        readonly type: "uint256[]";
    }, {
        readonly name: "descriptionUrl";
        readonly internalType: "string";
        readonly type: "string";
    }];
    readonly name: "propose";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "proposalId";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "lesser";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "greater";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "upvote";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "proposalId";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "getProposalStage";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "enum Proposals.Stage";
        readonly type: "uint8";
    }];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "lesser";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "greater";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "revokeUpvote";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "proposalId";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "index";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "approve";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "proposalId";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "index";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "value";
        readonly internalType: "enum Proposals.VoteValue";
        readonly type: "uint8";
    }];
    readonly name: "vote";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "proposalId";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "index";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "yesVotes";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "noVotes";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "abstainVotes";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "votePartially";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "revokeVotes";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "proposalId";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "index";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "execute";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "hash";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }];
    readonly name: "approveHotfix";
    readonly outputs: readonly [];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "hash";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }, {
        readonly name: "whitelister";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "isHotfixWhitelistedBy";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "hash";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }];
    readonly name: "whitelistHotfix";
    readonly outputs: readonly [];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "hash";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }];
    readonly name: "prepareHotfix";
    readonly outputs: readonly [];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "values";
        readonly internalType: "uint256[]";
        readonly type: "uint256[]";
    }, {
        readonly name: "destinations";
        readonly internalType: "address[]";
        readonly type: "address[]";
    }, {
        readonly name: "data";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }, {
        readonly name: "dataLengths";
        readonly internalType: "uint256[]";
        readonly type: "uint256[]";
    }, {
        readonly name: "salt";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }];
    readonly name: "executeHotfix";
    readonly outputs: readonly [];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "withdraw";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "isVoting";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "getReferendumStageDuration";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "getExecutionStageDuration";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "getParticipationParameters";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "proposalId";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "proposalExists";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "proposalId";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "getProposal";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "";
        readonly internalType: "string";
        readonly type: "string";
    }, {
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "proposalId";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "index";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "getProposalTransaction";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "proposalId";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "isApproved";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "proposalId";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "getVoteTotals";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "index";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "getVoteRecord";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "getQueueLength";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "proposalId";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "getUpvotes";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "getQueue";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256[]";
        readonly type: "uint256[]";
    }, {
        readonly name: "";
        readonly internalType: "uint256[]";
        readonly type: "uint256[]";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "getDequeue";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256[]";
        readonly type: "uint256[]";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "getUpvoteRecord";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "getMostRecentReferendumProposal";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "hash";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }];
    readonly name: "hotfixWhitelistValidatorTally";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "hash";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }];
    readonly name: "isHotfixPassing";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "hash";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }];
    readonly name: "getHotfixRecord";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }, {
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }, {
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "dequeueProposalsIfReady";
    readonly outputs: readonly [];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "proposalId";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "isQueued";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "proposalId";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "isProposalPassing";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "proposalId";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "index";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "isDequeuedProposal";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "proposalId";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "isDequeuedProposalExpired";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "proposalId";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "isQueuedProposalExpired";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "destination";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "functionId";
        readonly internalType: "bytes4";
        readonly type: "bytes4";
    }];
    readonly name: "getConstitution";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "getAmountOfGoldUsedForVoting";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly constant: false;
    readonly payable: false;
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "newVotingPower";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "removeVotesWhenRevokingDelegatedVotes";
    readonly outputs: readonly [];
}, {
    readonly constant: true;
    readonly payable: false;
    readonly stateMutability: "pure";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "values";
        readonly internalType: "uint256[]";
        readonly type: "uint256[]";
    }, {
        readonly name: "destinations";
        readonly internalType: "address[]";
        readonly type: "address[]";
    }, {
        readonly name: "data";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }, {
        readonly name: "dataLengths";
        readonly internalType: "uint256[]";
        readonly type: "uint256[]";
    }, {
        readonly name: "salt";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }];
    readonly name: "getHotfixHash";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }];
}];
