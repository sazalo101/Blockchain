export const proxyABI = [
    { payable: false, stateMutability: 'nonpayable', type: 'constructor', inputs: [] },
    {
        type: 'event',
        anonymous: false,
        inputs: [{ name: 'implementation', internalType: 'address', type: 'address', indexed: true }],
        name: 'ImplementationSet',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [{ name: 'owner', internalType: 'address', type: 'address', indexed: true }],
        name: 'OwnerSet',
    },
    { payable: true, stateMutability: 'payable', type: 'fallback' },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
        name: '_transferOwnership',
        outputs: [],
    },
    {
        constant: false,
        payable: true,
        stateMutability: 'payable',
        type: 'function',
        inputs: [
            { name: 'implementation', internalType: 'address', type: 'address' },
            { name: 'callbackData', internalType: 'bytes', type: 'bytes' },
        ],
        name: '_setAndInitializeImplementation',
        outputs: [],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: '_getImplementation',
        outputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
    },
    {
        constant: false,
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
        name: '_setImplementation',
        outputs: [],
    },
    {
        constant: true,
        payable: false,
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: '_getOwner',
        outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
    },
];
